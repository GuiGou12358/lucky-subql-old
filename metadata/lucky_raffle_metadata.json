{
  "source": {
    "hash": "0xa83e213e98df4ab2c6a281e4a765f777ffffd5d10d85578d6aed41a14f2b4433",
    "language": "ink! 3.4.0",
    "compiler": "rustc 1.69.0-nightly"
  },
  "contract": {
    "name": "lucky_raffle",
    "version": "0.1.0",
    "authors": [
      "guigou"
    ]
  },

  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "dapps_staking_developer_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            },
            {
              "label": "random_generator_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            },
            {
              "label": "reward_manager_address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            }
          ],
          "docs": [],
          "label": "new",
          "payable": false,
          "returnType": {
            "displayName": [
              "ink_primitives",
              "ConstructorResult"
            ],
            "type": 10
          },
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [
        {
          "args": [
            {
              "docs": [],
              "indexed": true,
              "label": "contract",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            },
            {
              "docs": [],
              "indexed": true,
              "label": "era",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 8
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "pending_rewards",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 6
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "nb_winners",
              "type": {
                "displayName": [
                  "u16"
                ],
                "type": 0
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "nb_participants",
              "type": {
                "displayName": [
                  "u16"
                ],
                "type": 0
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "total_value",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Event emitted when the Rafle is done"
          ],
          "label": "RaffleDone"
        }
      ],
      "lang_error": {
        "displayName": [
          "ink",
          "LangError"
        ],
        "type": 11
      },
      "messages": [
        {
          "args": [
            {
              "label": "era",
              "type": {
                "displayName": [
                  "u32"
                ],
                "type": 8
              }
            },
            {
              "label": "rewards",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 6
              }
            }
          ],
          "docs": [],
          "label": "run_raffle",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0xe2b0a726"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_role_raffle_manager",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 19
          },
          "selector": "0xa528dbca"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_role_participant_manager",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 19
          },
          "selector": "0xeffbebd9"
        },
        {
          "args": [
            {
              "label": "address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            }
          ],
          "docs": [],
          "label": "set_dapps_staking_developer_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0xb845797e"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_dapps_staking_developer_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 20
          },
          "selector": "0xeb967e60"
        },
        {
          "args": [
            {
              "label": "address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            }
          ],
          "docs": [],
          "label": "set_random_generator_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0x8895388e"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_random_generator_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 20
          },
          "selector": "0xcfa0d403"
        },
        {
          "args": [
            {
              "label": "address",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            }
          ],
          "docs": [],
          "label": "set_reward_manager_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0xec03e31d"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_reward_manager_address",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 20
          },
          "selector": "0x26685ebb"
        },
        {
          "args": [
            {
              "label": "new_code_hash",
              "type": {
                "displayName": [],
                "type": 4
              }
            }
          ],
          "docs": [],
          "label": "upgrade_contract",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0x1345543d"
        },
        {
          "args": [
            {
              "label": "value",
              "type": {
                "displayName": [
                  "Balance"
                ],
                "type": 6
              }
            }
          ],
          "docs": [],
          "label": "withdraw",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 12
          },
          "selector": "0x410fcc9d"
        },
        {
          "args": [
            {
              "label": "weight",
              "type": {
                "displayName": [
                  "participantmanager_external",
                  "GetParticipantInput1"
                ],
                "type": 6
              }
            }
          ],
          "docs": [],
          "label": "ParticipantManager::get_participant",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 20
          },
          "selector": "0x58038889"
        },
        {
          "args": [],
          "docs": [
            " Clear the data (participants and rewards)"
          ],
          "label": "ParticipantManager::clear_data",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 22
          },
          "selector": "0x37df64b1"
        },
        {
          "args": [
            {
              "label": "participants",
              "type": {
                "displayName": [
                  "participantmanager_external",
                  "AddParticipantsInput1"
                ],
                "type": 25
              }
            }
          ],
          "docs": [
            " add participants in the raffle",
            " a participant with a weight higher than another participant will have normally more chance to be selected in the raffle",
            " weight can represent the number of raffle tickets for this participant.",
            " weight can also represent the amount staked in dAppStaking, ..."
          ],
          "label": "ParticipantManager::add_participants",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 22
          },
          "selector": "0xb94a7c71"
        },
        {
          "args": [],
          "docs": [],
          "label": "ParticipantManager::get_total_value",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 27
          },
          "selector": "0x5575fa1d"
        },
        {
          "args": [
            {
              "label": "page",
              "type": {
                "displayName": [
                  "participantmanager_external",
                  "GetParticipantsInput1"
                ],
                "type": 5
              }
            }
          ],
          "docs": [],
          "label": "ParticipantManager::get_participants",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 28
          },
          "selector": "0x95499dd4"
        },
        {
          "args": [],
          "docs": [],
          "label": "ParticipantManager::get_nb_participants",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 30
          },
          "selector": "0x2c728b9e"
        },
        {
          "args": [
            {
              "label": "ratio",
              "type": {
                "displayName": [
                  "raffle_external",
                  "SetRatioDistributionInput1"
                ],
                "type": 7
              }
            },
            {
              "label": "total_ratio",
              "type": {
                "displayName": [
                  "raffle_external",
                  "SetRatioDistributionInput2"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Set the rate sharing by the winners",
            " First winner will receive : total_rewards * ratio[0] / total_ratio",
            " Second winner will receive : total_rewards * ratio[1] / total_ratio",
            " if ratio[n] equals to zero or is empty, tne winner n will receive nothing",
            " Sum(ratio[i]) <= total_ratio. Otherwise teh error IncorrectRatio is expected"
          ],
          "label": "Raffle::set_ratio_distribution",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 31
          },
          "selector": "0x98737fd4"
        },
        {
          "args": [],
          "docs": [],
          "label": "Raffle::get_total_ratio_distribution",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 27
          },
          "selector": "0x9b68910e"
        },
        {
          "args": [],
          "docs": [],
          "label": "Raffle::get_ratio_distribution",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 33
          },
          "selector": "0xda5dc8c5"
        },
        {
          "args": [],
          "docs": [],
          "label": "Raffle::get_last_era_done",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 19
          },
          "selector": "0x83f23bb1"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GetRoleAdminInput1"
                ],
                "type": 8
              }
            }
          ],
          "docs": [
            " Returns the admin role that controls `role`. See `grant_role` and `revoke_role`."
          ],
          "label": "AccessControl::get_role_admin",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 19
          },
          "selector": "0x83da3bb2"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RenounceRoleInput1"
                ],
                "type": 8
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RenounceRoleInput2"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Revokes `role` from the calling account.",
            " Roles are often managed via `grant_role` and `revoke_role`: this function's",
            " purpose is to provide a mechanism for accounts to lose their privileges",
            " if they are compromised (such as when a trusted device is misplaced).",
            "",
            " On success a `RoleRevoked` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `InvalidCaller` error if caller is not `account`.",
            " Returns with `MissingRole` error if `account` doesn't have `role`."
          ],
          "label": "AccessControl::renounce_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 34
          },
          "selector": "0xeaf1248a"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RevokeRoleInput1"
                ],
                "type": 8
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RevokeRoleInput2"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Revokes `role` from `account`.",
            "",
            " On success a `RoleRevoked` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `MissingRole` error if caller can't grant the `role` or if `account` doesn't have `role`."
          ],
          "label": "AccessControl::revoke_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 34
          },
          "selector": "0x6e4f0991"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "HasRoleInput1"
                ],
                "type": 8
              }
            },
            {
              "label": "address",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "HasRoleInput2"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Returns `true` if `account` has been granted `role`."
          ],
          "label": "AccessControl::has_role",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 36
          },
          "selector": "0xc1d9ac18"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GrantRoleInput1"
                ],
                "type": 8
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GrantRoleInput2"
                ],
                "type": 3
              }
            }
          ],
          "docs": [
            " Grants `role` to `account`.",
            "",
            " On success a `RoleGranted` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `MissingRole` error if caller can't grant the role.",
            " Returns with `RoleRedundant` error `account` has `role`."
          ],
          "label": "AccessControl::grant_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "ink",
              "MessageResult"
            ],
            "type": 34
          },
          "selector": "0x4ac062fd"
        }
      ]
    },
    "storage": {
      "root": {
        "layout": {
          "struct": {
            "fields": [
              {
                "layout": {
                  "struct": {
                    "fields": [
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 0
                          }
                        },
                        "name": "nb_participants"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0xbaed9900",
                                "ty": 1
                              }
                            },
                            "root_key": "0xbaed9900"
                          }
                        },
                        "name": "participants_1"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_1"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0xe54bf8a9",
                                "ty": 1
                              }
                            },
                            "root_key": "0xe54bf8a9"
                          }
                        },
                        "name": "participants_2"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_2"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0xdfc72956",
                                "ty": 1
                              }
                            },
                            "root_key": "0xdfc72956"
                          }
                        },
                        "name": "participants_3"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_3"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0x3967ac25",
                                "ty": 1
                              }
                            },
                            "root_key": "0x3967ac25"
                          }
                        },
                        "name": "participants_4"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_4"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0x5febf0ea",
                                "ty": 1
                              }
                            },
                            "root_key": "0x5febf0ea"
                          }
                        },
                        "name": "participants_5"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_5"
                      },
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0xba822069",
                                "ty": 1
                              }
                            },
                            "root_key": "0xba822069"
                          }
                        },
                        "name": "participants_6"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_value_6"
                      }
                    ],
                    "name": "Data"
                  }
                },
                "name": "participant_manager"
              },
              {
                "layout": {
                  "struct": {
                    "fields": [
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 7
                          }
                        },
                        "name": "ratio_distribution"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 6
                          }
                        },
                        "name": "total_ratio_distribution"
                      },
                      {
                        "layout": {
                          "leaf": {
                            "key": "0x00000000",
                            "ty": 8
                          }
                        },
                        "name": "last_era_done"
                      }
                    ],
                    "name": "Data"
                  }
                },
                "name": "raffle"
              },
              {
                "layout": {
                  "struct": {
                    "fields": [
                      {
                        "layout": {
                          "root": {
                            "layout": {
                              "leaf": {
                                "key": "0x6a2cd2b4",
                                "ty": 8
                              }
                            },
                            "root_key": "0x6a2cd2b4"
                          }
                        },
                        "name": "admin_roles"
                      },
                      {
                        "layout": {
                          "struct": {
                            "fields": [
                              {
                                "layout": {
                                  "root": {
                                    "layout": {
                                      "leaf": {
                                        "key": "0x5d5db175",
                                        "ty": 9
                                      }
                                    },
                                    "root_key": "0x5d5db175"
                                  }
                                },
                                "name": "members"
                              },
                              {
                                "layout": {
                                  "enum": {
                                    "dispatchKey": "0x00000000",
                                    "name": "Option",
                                    "variants": {
                                      "0": {
                                        "fields": [],
                                        "name": "None"
                                      },
                                      "1": {
                                        "fields": [
                                          {
                                            "layout": {
                                              "leaf": {
                                                "key": "0x00000000",
                                                "ty": 9
                                              }
                                            },
                                            "name": "0"
                                          }
                                        ],
                                        "name": "Some"
                                      }
                                    }
                                  }
                                },
                                "name": "_reserved"
                              }
                            ],
                            "name": "Members"
                          }
                        },
                        "name": "members"
                      },
                      {
                        "layout": {
                          "enum": {
                            "dispatchKey": "0x00000000",
                            "name": "Option",
                            "variants": {
                              "0": {
                                "fields": [],
                                "name": "None"
                              },
                              "1": {
                                "fields": [
                                  {
                                    "layout": {
                                      "leaf": {
                                        "key": "0x00000000",
                                        "ty": 9
                                      }
                                    },
                                    "name": "0"
                                  }
                                ],
                                "name": "Some"
                              }
                            }
                          }
                        },
                        "name": "_reserved"
                      }
                    ],
                    "name": "Data"
                  }
                },
                "name": "access"
              },
              {
                "layout": {
                  "enum": {
                    "dispatchKey": "0x00000000",
                    "name": "Option",
                    "variants": {
                      "0": {
                        "fields": [],
                        "name": "None"
                      },
                      "1": {
                        "fields": [
                          {
                            "layout": {
                              "leaf": {
                                "key": "0x00000000",
                                "ty": 3
                              }
                            },
                            "name": "0"
                          }
                        ],
                        "name": "Some"
                      }
                    }
                  }
                },
                "name": "dapps_staking_developer_address"
              },
              {
                "layout": {
                  "enum": {
                    "dispatchKey": "0x00000000",
                    "name": "Option",
                    "variants": {
                      "0": {
                        "fields": [],
                        "name": "None"
                      },
                      "1": {
                        "fields": [
                          {
                            "layout": {
                              "leaf": {
                                "key": "0x00000000",
                                "ty": 3
                              }
                            },
                            "name": "0"
                          }
                        ],
                        "name": "Some"
                      }
                    }
                  }
                },
                "name": "random_generator_address"
              },
              {
                "layout": {
                  "enum": {
                    "dispatchKey": "0x00000000",
                    "name": "Option",
                    "variants": {
                      "0": {
                        "fields": [],
                        "name": "None"
                      },
                      "1": {
                        "fields": [
                          {
                            "layout": {
                              "leaf": {
                                "key": "0x00000000",
                                "ty": 3
                              }
                            },
                            "name": "0"
                          }
                        ],
                        "name": "Some"
                      }
                    }
                  }
                },
                "name": "reward_manager_address"
              }
            ],
            "name": "Contract"
          }
        },
        "root_key": "0x00000000"
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "primitive": "u16"
          }
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "sequence": {
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "account",
                  "type": 3,
                  "typeName": "AccountId"
                },
                {
                  "name": "value",
                  "type": 6,
                  "typeName": "Balance"
                }
              ]
            }
          },
          "path": [
            "lucky",
            "traits",
            "participant_manager",
            "Participant"
          ]
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 4,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 5
            }
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "sequence": {
              "type": 6
            }
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 1,
                  "name": "CouldNotReadInput"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "LangError"
          ]
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 13
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 13
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 14
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 14
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 15,
                      "typeName": "AccessControlError"
                    }
                  ],
                  "index": 0,
                  "name": "AccessControlError"
                },
                {
                  "fields": [
                    {
                      "type": 16,
                      "typeName": "RaffleError"
                    }
                  ],
                  "index": 1,
                  "name": "RaffleError"
                },
                {
                  "index": 2,
                  "name": "RaffleAlreadyDone"
                },
                {
                  "index": 3,
                  "name": "CrossContractCallError1"
                },
                {
                  "index": 4,
                  "name": "CrossContractCallError2"
                },
                {
                  "index": 5,
                  "name": "CrossContractCallError2a"
                },
                {
                  "index": 6,
                  "name": "CrossContractCallError2b"
                },
                {
                  "index": 7,
                  "name": "TransferError"
                },
                {
                  "index": 8,
                  "name": "UpgradeError"
                },
                {
                  "index": 9,
                  "name": "LuckyOracleAddressMissing"
                },
                {
                  "index": 10,
                  "name": "RandomGeneratorAddressMissing"
                },
                {
                  "index": 11,
                  "name": "DappsStakingDeveloperAddressMissing"
                },
                {
                  "index": 12,
                  "name": "RewardManagerAddressMissing"
                }
              ]
            }
          },
          "path": [
            "lucky_raffle",
            "raffle_contract",
            "ContractError"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "InvalidCaller"
                },
                {
                  "index": 1,
                  "name": "MissingRole"
                },
                {
                  "index": 2,
                  "name": "RoleRedundant"
                }
              ]
            }
          },
          "path": [
            "openbrush_contracts",
            "traits",
            "errors",
            "access_control",
            "AccessControlError"
          ]
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "RaffleAlreadyDone"
                },
                {
                  "index": 1,
                  "name": "NoReward"
                },
                {
                  "index": 2,
                  "name": "NoRatioSet"
                },
                {
                  "index": 3,
                  "name": "IncorrectRatio"
                },
                {
                  "index": 4,
                  "name": "NoParticipant"
                },
                {
                  "index": 5,
                  "name": "NoSelectedParticipant"
                },
                {
                  "index": 6,
                  "name": "DivByZero"
                },
                {
                  "index": 7,
                  "name": "MulOverFlow"
                },
                {
                  "index": 8,
                  "name": "AddOverFlow"
                },
                {
                  "fields": [
                    {
                      "type": 17,
                      "typeName": "RandomError"
                    }
                  ],
                  "index": 9,
                  "name": "RandomError"
                },
                {
                  "fields": [
                    {
                      "type": 15,
                      "typeName": "AccessControlError"
                    }
                  ],
                  "index": 10,
                  "name": "AccessControlError"
                }
              ]
            }
          },
          "path": [
            "lucky",
            "traits",
            "raffle",
            "RaffleError"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "MissingAddress"
                },
                {
                  "fields": [
                    {
                      "type": 18,
                      "typeName": "RandomGeneratorError"
                    }
                  ],
                  "index": 1,
                  "name": "RandomGeneratorError"
                }
              ]
            }
          },
          "path": [
            "lucky",
            "traits",
            "random",
            "RandomError"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "DivByZero"
                },
                {
                  "index": 1,
                  "name": "MulOverFlow"
                },
                {
                  "index": 2,
                  "name": "AddOverFlow"
                },
                {
                  "index": 3,
                  "name": "SubOverFlow"
                },
                {
                  "index": 4,
                  "name": "MissingAddress"
                },
                {
                  "fields": [
                    {
                      "type": 15,
                      "typeName": "AccessControlError"
                    }
                  ],
                  "index": 5,
                  "name": "AccessControlError"
                }
              ]
            }
          },
          "path": [
            "lucky",
            "traits",
            "random_generator",
            "RandomGeneratorError"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 8
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 8
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 21
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 21
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 3
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 3
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 22,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 23
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 23
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 23,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 24
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 24
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 24,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "MaxSizeExceeded"
                },
                {
                  "index": 1,
                  "name": "PageNotFound"
                },
                {
                  "fields": [
                    {
                      "type": 15,
                      "typeName": "AccessControlError"
                    }
                  ],
                  "index": 2,
                  "name": "AccessControlError"
                }
              ]
            }
          },
          "path": [
            "lucky",
            "traits",
            "participant_manager",
            "ParticipantManagerError"
          ]
        }
      },
      {
        "id": 25,
        "type": {
          "def": {
            "sequence": {
              "type": 26
            }
          }
        }
      },
      {
        "id": 26,
        "type": {
          "def": {
            "tuple": [
              3,
              6
            ]
          }
        }
      },
      {
        "id": 27,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 6
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 6
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 28,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 29
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 29
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 29,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 1
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 24
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 1
            },
            {
              "name": "E",
              "type": 24
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 30,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 0
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 0
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 31,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 32
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 32
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 32,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 16
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 16
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 33,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 7
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 7
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 34,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 35
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 35
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 35,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 15
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 15
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 36,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 37
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 37
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 37,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      }
    ]
  }
 
}