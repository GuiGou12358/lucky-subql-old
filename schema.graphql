
type Account @entity {
  id: ID! # account address
  stakes: [Stake] @derivedFrom(field: "account") #virtual field
  totalStake: BigInt!
  rewards: [Reward] @derivedFrom(field: "account") #virtual field
  rewardsClaimed: [RewardsClaimed] @derivedFrom(field: "account") #virtual field
  totalRewards: BigInt!
  totalClaimed: BigInt!
  totalPending: BigInt!
}

type Stake @entity {
  id: ID! # Extrinsic hash
  account: Account!
  amount: BigInt!
  era: BigInt!
  blockNumber: BigInt!
}

type DeveloperReward @entity {
  id: ID! # Transaction hash
  era: BigInt!
  account: Account!
  amount: BigInt!
}

type PalletInfo @entity {
  id: ID! # always 0
  currentEra: BigInt!
}

type DappStakingEra @entity {
  id: ID! # Transaction hash
  era: BigInt!
  blockNumber: BigInt!
}

type RaffleDone @entity {
  id: ID! # Transaction hash
  era: BigInt!
  total_rewards: BigInt!
  nb_winners: BigInt!
	nb_participants: BigInt!
	total_value: BigInt!
}

type Reward @entity {
  id: ID! # Transaction hash
  account: Account!
  era: BigInt!
  amount: BigInt!
}

type RewardsClaimed @entity {
  id: ID! # Transaction hash
  account: Account!
  amount: BigInt!
}

